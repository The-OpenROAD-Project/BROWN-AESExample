#!/bin/sh
# This comment makes this script an executable. Do *NOT* delete \
eval exec ${ICDIR}/bin/icos idetailer -v -do entire.ddo $1
#

twrouter contour
twvirtual_pin_assign off
twreport_errors off
# First move the pads far away.
twplacepads::convert_exact_to_relative -sides {L B R T}
twplacepads relative -core 400 

twcompute_boundary -recompute -setcore
twplacepads relative -core 40 -update_padring
twnet create VDD -now
twnet create GND -now
twnet globalbind VDD vdd -force -type power
twnet globalbind GND gnd -force -type ground

# Row Strap Generator commands.
::icrowstrap_gui::setvar -nets "VDD GND"
::icrowstrap_gui::setvar -strap_layer metal1
::icrowstrap_gui::setvar -align_layer all
::icrowstrap_gui::setvar -autowidth
::icrowstrap_gui::setvar -bridge_rows
::icrowstrap_gui::route_straps

# Power/Ground Ring Generator commands.
::twplacepads::remove_routing
::icpower_ring_gui::setvar -nets "VDD GND"
::icpower_ring_gui::setvar -hlayer metal1
::icpower_ring_gui::setvar -vlayer metal2
::icpower_ring_gui::setvar -hwidth 10.0
::icpower_ring_gui::setvar -vwidth 10.0
::icpower_ring_gui::setvar -hring center
::icpower_ring_gui::setvar -vring center
::icpower_ring_gui::add_rings
::icpower_ring_gui::route_rings

# Now put a boundary around the die area
set boun [twcompute_boundary -recompute -norouting]
eval twadd_keepin -layer all $boun
twadd_keepin -updatedb

set wait_flag [twwait marker restore]
if {$wait_flag} {
  twmessage imsg entire.ddo "Waiting for user to load restore file.\n"
  twwait markerwait restore
} 

# Temporary fast route.
set fast_route true
if {$fast_route} {
  set num_nets [twnet number]
  for {set net 1} {($net <= $num_nets) && ($net < 20)} {incr net} {
    twroutenet $net
  }
  icoutput -nonotch
  twexit 0
}

# use preroute to resolve conflicts
ic_reroute_dv_errors
icrestore -pins
icrestore -database
icroute_unconnected 0
icroute_unconnected 1
icroute_unconnected 2
icreroute_dv_errors
icroute_unconnected 1
icbeautify
icroute_cleanup
icnotchfill all
# Now fix up any notchfill errors.
set dverrs [icreroute_dv_errors]
if {$dverrs != ""} {
  icroute_nets_with_notch_errors
}

icoutput -nonotch
